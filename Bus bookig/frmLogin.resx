<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4QBWRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAAB
        AAAARgEoAAMAAAABAAIAAAITAAMAAAABAAEAAAAAAAAAAAEsAAAAAQAAASwAAAAB/9sAQwAFAwQEBAMF
        BAQEBQUFBgcMCAcHBwcPCwsJDBEPEhIRDxERExYcFxMUGhURERghGBodHR8fHxMXIiQiHiQcHh8e/9sA
        QwEFBQUHBgcOCAgOHhQRFB4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
        Hh4eHh4e/8AAEQgBaAFoAwEiAAIRAQMRAf/EAB0AAQACAgMBAQAAAAAAAAAAAAAHCAUGAwQJAQL/xABZ
        EAABAwMCAwMHBgQQCQ0AAAAAAQIDBAUGBxEIEiExUYETIkFhcZGhFDJCcqKxFSNSkhYkMzdDU2JzdYKT
        ssHCw9MJF1djg4SVo9IYJSY1OEVWZIaUs7Tj/8QAGQEBAAMBAQAAAAAAAAAAAAAAAAECAwQF/8QAKxEB
        AAICAQMEAQQBBQAAAAAAAAECAxExBBJRExQhQSJSYaHwMjM0QrHR/9oADAMBAAIRAxEAPwC5YAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADdO8AD5uneg3TvQD6Bun
        eAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB16utpqVPxr3K78iNjnuX+K1FUXStp
        7bbaq41cnk6alhfNM/8AJY1qucvuRTzlzLWDULJrpW1UmW3qlo6md8kVHT1boY4o1cqtYiM23RE2Trua
        4sU5OGObNGLlfS+ZnPQ075abGrlM1OyWqmgoovfM9rvsqR5kWsd0pk3be9LrN+5q8hkrZU9rII0Tw5ii
        lXPPVyLLVzy1L17XTPV6r4u3ONPN+am3sOmOmiOZcdusmeIW3umttS7d02uOO0i/kWfD6ioVPY6V2xq9
        drPTPcvyjWjUCqT/AMjjVHTp4cztyuANIwVj+wznqbz/AGU9Tax2vddtQNY5/Wk1DCi+CIpwN1opmL+L
        zHV1PW65ULvgsRBgJ9GqvuLrBUeuczFRIdS9RaNe+qtNurGp7dlaqm2WXUrVrIo1jwPUTE8qqE2V9JWW
        xtvro2+l/k3qjHNanVVa5dkKq08M1ROkFPDJNKvZHGxXuXwTqbnppbrja84bJcKGsoZKe03Gra2ogdE5
        Wto5+qI5EVU36blbYqxC9M15n5WDpdRdYI5eSm1J0fvVU1dn0aVzY3b/AJKOXkRfBTaqbWDVayxJJl2j
        dbV023MtbYKlKmPl70a3mTb+MRdw+cPOP5/pQzIb9XXSjq6qpkbRupns5GxR+ZurXNVHbuR/d0RDMz8N
        Oo+JTuq9O9RVYreqRrJLRPX1LyK5jvFEQxmMe9Ois5ddyVLBxH6XXGdKW4XSsx+r7Fgu1G+FUXuVybtT
        xVCTrHfrJfaf5RZbvQXKHbfnpKhkqfZVSqF2vOv2Pw/JtQNOLfm9ujbs6Sot0dUvL3pJDuqe1zTXrdkv
        D7eK5PwtiuR6dXdF61FpqpOVju/ZvVP5MpOGJ4/9XjPMfE/z8LxArriFDltTEkmlvEFQZLCidKC+xMqH
        oncrk/Gt/NQ2ZudazY75uV6VRXqBvRavG69JF9vkZPO+JnOP920ZPMJkBFVp1+06nqUo71W1+L1yrstN
        faGSkci/WVFZ8SSLRdrXeKVKq03KjuFOvZLTTtlavi1VQpNZjlaLRPEu6BuCFgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA1fOdQsLwmJr8oyKhtznJzMhe/mlenekbd3Knr22Ix4qdaJdPbfFjuOPjdkldF5Tyjk
        RyUUKqqJJsvRXuVFRqL06Kq9iIutcMWAaaZVR1OV3O6JnOTtla64SXCORWU0jk3REjkTz/T57t99l2RN
        tjWMf491uGNsu7dleXU114isKyLTG94/ilRcpq+4RJTNlfRuij8m5yeUXmX9xzJt6yopaHjzulNTVeLY
        jQQw08MEUtfJHExGtTmVI4+idOxshV47cERFNw8/qbTN9TPAADZzgAAEx6E6OxZZaqrNsxrJbThtv5nS
        SMRfK1it+c2PZFVGovRXIiqq+a3ruqQ27o1y+pT040ip4KfSnE4aeJkUaWakVGsTZN1haq/FVXxMOoyT
        Svw6elxRe3z9Kg37X5mOpJZNIcUteK2uJVYlVNSpJVzbdOZyL0Rfrc696p2GrWPL8kzK6ZXkWUXWS41d
        Dh9fGyV7GM5GPVsaNRGoidszvefviyhig4gMnbDGyNrnwPVGpsiudBGqr7VXqpjtJ6F9Zi2eNYm76i20
        VvZ7ai4QN29zVEVrFNxBNrTk7Zn4hezQ+zpYdIcVte2zorXC56fu3t53facpuRx0sMdPTRU8SbRxMRjU
        7kRNk+45Dz5nc7epWNRo2Qw2R4pjWRwrFf7BbLm1U2/TVKyRU9iqm6eBmQpHBMb5Vq120b0WxDFqrK6i
        G52CWLzaZlrrFR806/NYxsnMiKvq22RFX0GP4SLXq7dmU+QXXL7rS4k1fxFLWKlQ+uRPQxZEVWR/u0Xr
        9FPSc7rXJxBa41dVWq9+n2IzLSxsRyoyuqEXz0TvRyp1VPoI1PpFm6eGKCCOCCNkUUbUaxjGo1rWomyI
        iJ2Iieg3tea17Z+Zc9McWv3R8R/2690tluulMtNc6ClroF7YqiFsjV8HIqEeXXQjTepqlrbZaajHK5V3
        SqsdXJRPRfYxeX7JJwMYtMcN5rE8wiluD6pWDrjGqbrpA1fNpMlt7ajf1LPFyv8AgpzMzLVCyebk+mP4
        ThavnVeNXFlRv60gl5H+5VJQGyE93mEdmuJR7bNZcBqKltFc7rNjtc5dvkt9pZKB6L3byojV8HKb5R1d
        NWU7KmkqIqiB6btkiej2uT1KnRT819DR3CmdS19JBVwP+dFPGj2L7UXdDS6jSPB21D6uz22fHKty7+Xs
        dXJQrv62xORi+LVH4yflDfAaPFjmd2lf+aM6S5wtTZsF9t7JXezy0Cxu8VRx3oL3ltIvLecSSdqJ1ntN
        cydq+vklSN6exOYjSe7zDagYqhv9tqntjc+allVP1KrgfA7w50Tfw3MqnYQsAAAAAAAAAAAAAAAAAAAA
        AAAAojxvfr4u/gmm++Q3/wDwfH6lmv1qL7pjQON79fF38E033yG9cAtRFR27O6ud3JFAlJK93c1rZlX4
        Id1v9B5tf9yiviuu77/rnkcsSq+ntfkqFF36N5Gojv8AeOeRObvd1luWCX3MardZr5kzYmKvaqNjlqJP
        jLEngaQb0jUa8ObJO7b8gALqAAA+P+Y72KenmlX61+KfwLR//Aw8w3Ju1U702PQ7SfU3T5dMcajlzKxU
        00Nrp4JYaiujikjeyNrXNc1yoqKiopy9VEzEadnRzETO1SeLj/tB5L/q3/14zOcMFv8AllDWRubzJV5T
        YoFTvbFJNUOT/doalxK3y1ZFrbkV2stbFXUMkkTI6iJd2SKyFjHK1fSm6Km6dF2Jg4NLcktkoKhzN0fl
        Usu/qhtz0T7U6FrzrFCtI7s8rdJ2AA896gaZrde62w6YXqrtbVfdJ4m0VvY35zqmdyQxbevmei+BuT3N
        YxXvcjWom6qq7IiEBaq69aW099tFA6vqr2tsuSVkzbZB5VivjY9GIj1VrXbPc13mqvzS9KzM/EM8lorH
        zOkq6UYbRYFgVrxiiRrvksKeXlROs0y9ZJF9rt/DZPQbSQDT8WWmDlRs9NkVMv8AnKJi/wA2RTNW/ia0
        fq1RH5FUUqr+32+ZNvFGqTOO/MwiuXHrUSmQEd0GuGk1aqJBndnbv2eWkdF/PRDY7fnOF3BE+Q5bYanf
        sSK4xOX3cxWazHMLxes8S2EHFT1EFQzngmjlb3scjk+By7lVgBFRfSAAAA+KiKmypuncfQAAAAAAAAAA
        AAAAAAAAAAAAAAAK08TGg+XagagRZLjlZalhfQx08sVXK6JzHMV3VNmuRUVHerbYw1jwDIdEtAdSLhf6
        6gdW3aljpqeOkkc9Gc3NEiq5UTqqzL0ROnKWvK+8clbNJp7Y8Ypd1qb3eYomtT6SNRV/nuYb48lrapPD
        myYq13kjlXTU6gbY9EdMbXyKyauZX3eZF9PlXxtj+wiEWE/cbVNFa8zxSwU/SC2Y7FDGnqSRzU+DEIBO
        3FO67edmjV9AANGYAAAVEXtRAABdTgutnJp5Z6xyJs+quc6e3mgiRfc1Slidp6C8JtvSm0LxadURHSU0
        z/z6h7vu2OfqZ1R1dHG7paCg0rXPKJMN0myLIYH8lTTUbm0zt+qSvVGMXwc5F8DgiNzp6czqNyh7VDIc
        i1n1FqdJ8HrXUWO29dshusfVH7Ls6NFTtaiorUb9NyLv5rV3mfTvTbDsDtMdBj9mp4nI1EkqpGI+omXv
        fIqbr7E2RPQiGucMGDx4VpPbWTR7XS6MSvuEjvnufIm7Wqvb5rVRPbuvpJSL3t/xjhljpv8AK3MujV2a
        0VabVVroZ/3ynY770MRWaf4JWIqVWGY7Nv2q+2wqvv5TZQU3LWYiUfVmimlNXv5XA7Gm/wC10/k/5qoY
        et4ctHKpF3w6OFV9MNZO3+uSyCe+3lX06T9ITXhi0yjfzUP6ILcvoWlu0jdvfudiLQWOh/6l1Q1Gt23Y
        jbxztTwVpMgJ9S3lHpU8Imp9NNQ6JU/B+uGRbJ2JXW2mqffuiKd2LH9Z6Nd49RccuW3orccWNV8Ypk+4
        kwEd8p7IaDTv1jhd+mKfA69qftc1XSqvvbIiHeivWexqiVmEUD+9aO+Nf8JImfebgCN/snt/dgqe+XFW
        p8qxW706+lUfTyp9mVV+BlqOpSpZzJDPEv5MsatU5wQkAASAAAAAAAAAAAAAAAAAAAAABXvWSNcl4qdN
        MZ3R8NshkuszfQmzlcm/jC33lhF7CtFoyvFqPi7zW+5Lfrda4LZbYbZRrVztj5nqjFfy79u2zt/rGmLe
        5mPDHNrURPlpnH1Z6mLNsev3k3fJqm3OpOf0eUjkV+3i2TfwUrSeg+fZjodnGOTWDJMxxuro5VRyfp9r
        XxPTsexyLu1yb9qetOqKqFZss0i04bUPfi2t+LPhVd2w3OVEc1O5ZI90X81Drw5NV7bQ4uoxbt3VlCIN
        5r9OVplXyOfafViJ2LFfmt38HtQwtTitVAu34ZxmX96vUDv6xvFolzTS0fTAA79Rap4d+aptz9v2uuif
        9zjouRWuVFVF27l3LKzGnwAAN9uvd1PSvQiiW36M4fSqmypZ6Zyp63Ro5fvPOXGrFdMmv1HYLNSvqq+u
        kSKGNqd/a5e5qJ1VexEQ9QMdt7bRYLfamu520VLFTtdt2oxiN3+BydVPxEO7oq/My75DnFTD+GMdxbD2
        Lu+/5NR0r298TVWSRfYiNQmMiinjdnOvbLpEnlLFg8MtLHLtuya5zIiSI3v8lHsi9znbeg5afE78O3J8
        xrylWNrWMRrERGomyInYiH6B8fzcq8u3Nt037Ci7iraqmoqWSqrKiKnp4mq+SWV6MYxqdqqq9ET2mhXH
        L8nyTek05s0b4HdFv92a6KianfDH0kqF7lRGs/dKbVNjtFXVTKq8b3KSN3NFHOm8MS+hWx/N3T8pd3es
        zKITExCsxMoziwzVPZFl1mmVfTyY3SInhvudhmHajJ8/WC4L7LFRJ/VUkQE98o7I/sy0SLEc5T9U1XvD
        vq2mhT+yU7EeKZWnz9Tb672UFAn9gbmB3Snshq0WM35v6pqBkD/9Wok/sDsx49c2/OzO/P8AaykT7oDY
        ARuU9sMMyy1jfnZLeH/W8gn3RIc8dsnb23i4v+s6P+hhkhuhGzTghp3R9tTPJ9Zyf0Ic4ASAAAAAAAAA
        AAAAAAAAAAAAAAAKUsx3ROfWHLs5yX9EzbU2LJqymRi0flufZ3Nzb87du1E29RdNewrTwqZJd6eizOio
        MXqLtDHktTNNLT1cTJUdJ2JySK1FREZ282/XsNsVprEzDDNWtrVizCN4OnfS1BXwtX/6n6Tg6b/lBf8A
        7KT+9LIY3k8F4uNXbJbZcrVX0scczqauYxr3xvVyNe1WPcjm7tci9eip17UM+PXyeUR02KfpVFODpn+U
        KT/ZSf3p+k4OofTqFN4WpP7wtYB7jJ5Pa4vCq7eDqj+lqBVr7LWxP7Q5o+Dy0Iv4zOrk76tBGn3uUtEC
        PXyeU+2xeFaqfhBxJqp8oyy/yJ6eRkLP6qmXouE7TSBUWetyOq29D61jEX81iEs3rMaS33mSz0tru93r
        IYmSzst9MkiQo/fkR7lc1qKvKqom++3X0ocC5VfZm70en+QuXvqJqOFPjMq/An1ck/Z6OKPp80/04wvA
        4Xsxew01DJI3llqOsk0idzpHKrlT1b7eo201BbhqFWR/pfH7Hav85WXJ87k/0cUaIv56HNpxcbxcKG6t
        vVXBV1NJdqmlSWCn8ixWMciJs3mcqdq9qqvrM53PzLWuo+IhksmpLrcaT8H22tW2tm3bPWx7LNGz0pEi
        9EevocvRvbsqnNjdktmO2Wms9npGUtFTN5Y42qq9q7q5VXq5yqqqrl3VVVVVd1MiCqdfYD49zWMV73I1
        rU3VVXZEQjbILfqRl8Mldj2YQ4dQdtDE22sqZ6lPRJM56+Y13ajGpuiKiqu68qTEbJnSSgRHorqJkNwy
        W7ac6hU9NT5daGpKk0CcsVwp122lYnf1RV29C9ibKiS4LVms6RW0WjcAAIWAAAOnd1rVpFhtz44qqXzW
        SyM52xd71bum+3dum67HcHQCILpds206zC1Q3q/yZRj2QzrQwTVVNFDNQV7kVYWqsTWtdFIqK3qm7V+P
        3UvC73Z7HU51jOR3qTK7XG6tlbNWyOpbgxnnSU7qdV8mxitRyN5URUXbqq9Ts8VapFo9VVbdkqKW5W+a
        nX0pIlXHsqevqpJV3fDHaaySoVqQtgkdJv2cqNXffwNN/ESy7fmYdbEb3SZLi9ryCgVfk1xpI6qJFXdU
        a9qO2X1pvt4GUK68M2pFrXS3HsZjv2MUldRwLE6OuuSsm253K1EjVqIvRU7Hk/UCVSsSWorIJ0cm6eRi
        5WeCq5d/eVvXtnS1LxaIl3AAVXAAAAAAAAAAAAAAAAAAAAABewrNwv0GSUdZqH+h+qtKyRZPNDUUlfDI
        m/KruVzZWO83fdU2VjuwsyvYQRo0rse4ktUMVm2a25OhvVMn5TXfPVPGVE8DSk/jMMrx+VZd/Vqm1br6
        eluWHWCntuS0XNEyrpblBPFNTv28pG5szGL2tY5Oi7K31qQ9cco4t7c5Wz228P27VgtFNOnvjapckbJ3
        E1y6jWoRfD3TvumFHJ9WOJimVUnp75GqdvNjSf3R1/8AHXxEouyrcvHHG/3Revb2jb2+8v61f0wz9vb9
        cqNQ6ycSEvSOC6yfVxlF/szIUupvFJVdKezXmX/0yifexC6u3t94I9av6YT6Fv1yi3Tm73Gz49HHW4vl
        d3vlY75Vdaz8Hsp0nqXNRHbJK9iI1qI1jU26Nahsn4czOofy0mDMp0XsdcLvFHt4QpKpt2ydwMpnf03i
        sxHLUFt+f3FOWtv1ossSr1bbaN0823qlmXlT+SUzeM2Ojx+2fIaN08iOkfNLNPIsks0r13e97l7VVfYn
        oRERNjKAjaYjQBudavr6KggWeuq6eliTtfNIjGp4qqEJc08TJ4Xwyt5mParXJ3ovah+0TZNk6Gmf41NO
        nX6ksUOZWepuNZM2CCCnqEmV8jl2Ru7N0Tf1qhuZMxMcoiYnhAvEGxuOaz6XZxTr5OWS5LZ6xyfThl6I
        i+zmkJ5Rdk6qVs4671+CrThfkOR1XFeFromu6p+JYnanbtzOahB9/wCI7Vu7c7WZDDbI3KvmUFHGzb2O
        cjnfE3rhtkrEw5bZ64rzEvQNVRE3XsNayDUDB8fa78M5bZKJze1ktaxH/mou/wADzhv2YZZfnKt7ye83
        HftbUVsj2/m77fAwSIiLujURe9ENI6TzLO3W+IX5v/E5pPbFVtNda+7OT0UNC9UX+M/lT4ke3/jBpWo5
        lgwmokX6MldWtjTxaxHfeVJHYm69neaR01IY26vJPCdL/wAU+qFxVUt62azsXs+T0flHJ4yK5PgfjSHi
        Cyu06jU9yzjIrndbLURup6qJ2ythRyoqStjaiJu1UTfZN+VV2Ihx/Hr/AJDOkFhslxusirttSUz5dvar
        U2TxJVxThm1TvfI+st9DYoXdeavqU59vqR8y+/YtauKsalFb5rTuNy3bir1xsWSW+049hFcy4QwVkVwq
        6ryTkiV0S80cSI5EV3nec7pt0RO/b7qfxQ0uRaXT2Oy2ett96uVOtPXSyub5GnY5NpPJuRd3K5N0TdE2
        33XqhseK8Idjh5JMoyuvr3droaGFtOzfu5nczl+BLWJ6JaX40rJLfiFvmnZ+z1rVqZN+/eRV2X2Ihzzf
        DWIiPnTqime0zMzrbz8xvE8myaRIcfx253X0fpaldIxPa7blTxUnTS/Q/Xqhkjmob+/DoV6q19zc5dv3
        mPmavsXYuhDDFDE2KGNscbU2axqbIiepEP3sRfqbW4hNOkrX5mWp6eWPMLLR+TyvNP0SyqxER34NjpuV
        fa1d3eJtgBzzO3VEajQACEgAAAAAAAAAAAAAAAAAAEVauacZLeszs+cYDfqKxZHQ08lHNNVQeVjnp3dU
        RW7L1RVXtT0+pCVQTEzE7hFqxaNSg5Mf4m4uzO8IqP3ygc37oz8rR8UMPZdNPan2xSt3+yhKmUZpiWLx
        ufkOS2m17Jvy1NWxj19jVXdfBCJsr4qNN7Vzx2ZtzyCZPmrTU/kolX68m3wRTWvdbiv8Mbdlebfy5Vqu
        KKH/ALt09qNvyZJW/eqHxL7xPx9uF4NUbfk1rk++Qh7LeLTNa/njx2yWqyxL82SbmqpU9/Kz7KkRZZqZ
        n+Vc6X3LbtVRP7YGzrFD/Js5W/A2rhtPMQ57dRSOJmVjsu131bxLmTIMf0/glb2wR3lJJl/0bZVd8DVW
        cXuY/SxOwr7Jpk/pK2oiJvsiJv27J2g2jBT7hhPU3+pWXbxfZT9LD7KvsqpU/oP2nGBkfpwu0r7K2X/h
        Kygn0MfhHucvlZv/AJYOQ/8Agq1f++k/4TB37iw1FrUVlst9itLfQ5sL53p4vdt9kgACMGOPpE9Rkn7S
        Bf8AWnVS9q75bnF2jY7tZSPbTN9n4tGmj3CtrLjMs1wrKmskXqr6iV0rve5VOuDSKxHEMptaeZc9vq6m
        311PXUUqwVFNKyaF7foPaqOavgqIX6074gNPsgw+K6XnILfZLjFEny6jqpeRzHonnKxF6vaq9U5d167L
        16FCLVbrhdqpKW1UFVXzuXZIqWF0rvc1FUk7FOHjVe/8j/0OpaYHL+q3OdsO38RN3/ZMc1KW/wAp03wX
        yUn8Y26fEfqS3UvUF1yomyR2ehi+S29kibOczfd0ip6FcvXb0IjUXqRmWyxThAYnJJlWYvd186C2UyNT
        +Uk3/mktYpw+aU4+rJGYxFcp2Lv5a5SOqVX+K7zPslfXx0jUL+2y5J7rKA2SzXe+VKU1ltVdc51XZI6S
        nfMv2UXYlLFOG7Va+8j5rNT2WB/7JcqlGKn8RnM73ohfe30FFbqZtNQUlPSQN+bFBGkbE8EREOz2GVuq
        t9Q2r0VY/wApVZxThAt8fJLlOX1VSv0oLdTtib7Od/Mq+5CWsT0H0rxxY5KbE6SsnZ+zXBVqnKvfs9Va
        ngiEmAxtlvbmXRXBjrxDipKanpKdtPSwRQQsTZscbEa1E9SJ0OUAzagAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAMTcsZxy5zOmuVgtVbI75zqijjkVfarkU1246RaYXBVWpwPHlVe1WULGL72ohvAJi0xwrNYnmEU
        V/Dto/VIv/RCOncvpp6ueP7n7GAreFXS2o38il+pO7yVw5tvz2uJ2BaMl4+1Zw0n6Vqr+EHEpFX5Dll+
        p+7yscMv3NaYC4cHcqIq2/Pmu7kqLXt8Wyf0FtAWjPkj7UnpsU/SlldwiZvHutHkuPVCJ2JIk0Sr9lxr
        9fwu6sU6r5Gks1Zt2eRuKJv+e1pfMF46m6s9Jjl53XDQDV+i38phdTMiemnqYJPufucmOcPurN6mViYr
        Jbo0XZ0txnZA1PDdXL4Ip6G7J3DZCfdX8K+zp5VIxXhAqncsmU5hHH+VBbKbmX+Uk/4SWsV4ctKLDyvf
        j7rvM3ZUluc7pvsdGfZJdBlbNe3Mta4MdeIdO02q2WmlSltVupKCBOyKmhbE1PBqIh3NgDNsAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/2Q==
</value>
  </data>
</root>