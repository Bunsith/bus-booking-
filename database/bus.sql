--------------------------------------------------------
--  File created - Friday-December-09-2022   
--------------------------------------------------------
DROP TABLE "BUS"."TBLBOOKTRANTICKET" cascade constraints;
DROP TABLE "BUS"."TBLBRANCH" cascade constraints;
DROP TABLE "BUS"."TBLBUS" cascade constraints;
DROP TABLE "BUS"."TBLBUSEXPENSE" cascade constraints;
DROP TABLE "BUS"."TBLDRIVER" cascade constraints;
DROP TABLE "BUS"."TBLEMPLOYEE" cascade constraints;
DROP TABLE "BUS"."TBLGOODTRANPRICE" cascade constraints;
DROP TABLE "BUS"."TBLPOSITION" cascade constraints;
DROP TABLE "BUS"."TBLTRANGOOD" cascade constraints;
DROP TABLE "BUS"."TBLTRANSCHEDULE" cascade constraints;
DROP TABLE "BUS"."TBLTRANTICKET" cascade constraints;
DROP TABLE "BUS"."TBLUSER" cascade constraints;
DROP PROCEDURE "BUS"."ADDBRANCH";
DROP PROCEDURE "BUS"."ADDBUS";
DROP PROCEDURE "BUS"."ADDBUSEXP";
DROP PROCEDURE "BUS"."ADDDRIVER";
DROP PROCEDURE "BUS"."ADDEMPLOYEE";
DROP PROCEDURE "BUS"."ADDPOSITION";
DROP PROCEDURE "BUS"."ADDPRICE";
DROP PROCEDURE "BUS"."ADDTRAN";
DROP PROCEDURE "BUS"."ADDTRANSCHE";
DROP PROCEDURE "BUS"."ADDTRANTICKET";
DROP PROCEDURE "BUS"."ADDUSER";
DROP PROCEDURE "BUS"."BRANCHREPORT";
DROP PROCEDURE "BUS"."BUSEXPENREPORT";
DROP PROCEDURE "BUS"."BUSREPORT";
DROP PROCEDURE "BUS"."DELETEBRANCH";
DROP PROCEDURE "BUS"."DELETEBUS";
DROP PROCEDURE "BUS"."DELETEBUSEXP";
DROP PROCEDURE "BUS"."DELETEDRIVER";
DROP PROCEDURE "BUS"."DELETEEMPLOYEE";
DROP PROCEDURE "BUS"."DELETEPOSITION";
DROP PROCEDURE "BUS"."DELETEPRICE";
DROP PROCEDURE "BUS"."DELETETRAN";
DROP PROCEDURE "BUS"."DELETETRANSCH";
DROP PROCEDURE "BUS"."DELETETRANTICKET";
DROP PROCEDURE "BUS"."DELETEUSER";
DROP PROCEDURE "BUS"."DRIVERREPORT";
DROP PROCEDURE "BUS"."EMPLOYEEREPORT";
DROP PROCEDURE "BUS"."PRICEREPORT";
DROP PROCEDURE "BUS"."SEARCHBRANCH";
DROP PROCEDURE "BUS"."SEARCHBUS";
DROP PROCEDURE "BUS"."SEARCHDRIVER";
DROP PROCEDURE "BUS"."SEARCHEMPLOYEE";
DROP PROCEDURE "BUS"."SEARCHPOSITION";
DROP PROCEDURE "BUS"."SEARCHPRICE";
DROP PROCEDURE "BUS"."SEARCHTICKET";
DROP PROCEDURE "BUS"."SEARCHTRANSCH";
DROP PROCEDURE "BUS"."SHOWBRANCH";
DROP PROCEDURE "BUS"."SHOWBUS";
DROP PROCEDURE "BUS"."SHOWBUSEXP";
DROP PROCEDURE "BUS"."SHOWDRIVER";
DROP PROCEDURE "BUS"."SHOWEMPLOYEE";
DROP PROCEDURE "BUS"."SHOWPOSITION";
DROP PROCEDURE "BUS"."SHOWTRAN";
DROP PROCEDURE "BUS"."SHOWTRANPRICE";
DROP PROCEDURE "BUS"."SHOWTRANSCH";
DROP PROCEDURE "BUS"."SHOWTRANTICKET";
DROP PROCEDURE "BUS"."SHOWUSER";
DROP PROCEDURE "BUS"."TEST";
DROP PROCEDURE "BUS"."TRANSCHEREPORT";
DROP PROCEDURE "BUS"."TRANSPORT";
DROP PROCEDURE "BUS"."TRANSPORTREPORT";
DROP PROCEDURE "BUS"."TRANTICKETREPORT";
DROP PROCEDURE "BUS"."UPDATEBRANCH";
DROP PROCEDURE "BUS"."UPDATEBUS";
DROP PROCEDURE "BUS"."UPDATEBUSEXP";
DROP PROCEDURE "BUS"."UPDATEDRIVER";
DROP PROCEDURE "BUS"."UPDATEEMPLOYEE";
DROP PROCEDURE "BUS"."UPDATEPOSITION";
DROP PROCEDURE "BUS"."UPDATEPRICE";
DROP PROCEDURE "BUS"."UPDATETRAN";
DROP PROCEDURE "BUS"."UPDATETRANSCHE";
DROP PROCEDURE "BUS"."UPDATETRANTICKET";
DROP PROCEDURE "BUS"."UPDATEUSER";
--------------------------------------------------------
--  DDL for Table TBLBOOKTRANTICKET
--------------------------------------------------------

  CREATE TABLE "BUS"."TBLBOOKTRANTICKET" 
   (	"BOOKTRANTICKETID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"SOURCE" VARCHAR2(50 BYTE), 
	"DEST" VARCHAR2(50 BYTE), 
	"TIME" VARCHAR2(50 BYTE), 
	"DEPARTUREDATETIME" VARCHAR2(50 BYTE), 
	"SEATNO" NUMBER, 
	"CUSFULLNAME" VARCHAR2(30 BYTE), 
	"EMPID" NUMBER, 
	"PRICE" NUMBER, 
	"BUSID" NUMBER
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBLBRANCH
--------------------------------------------------------

  CREATE TABLE "BUS"."TBLBRANCH" 
   (	"BRID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"BRNAME" VARCHAR2(30 BYTE), 
	"BRPHONENO1" VARCHAR2(60 BYTE), 
	"BRPHONENO2" VARCHAR2(60 BYTE), 
	"BRPHONENO3" VARCHAR2(60 BYTE), 
	"BRFAX" VARCHAR2(20 BYTE), 
	"BRADDRESS" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBLBUS
--------------------------------------------------------

  CREATE TABLE "BUS"."TBLBUS" 
   (	"BUSID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"BUSPLATENO" VARCHAR2(50 BYTE), 
	"BUSSEATNUM1STFLOOR" NUMBER, 
	"BUSSEATNUM2NDFLOOR" NUMBER, 
	"TOILET" NUMBER, 
	"BUSMANUFACTUREDDATE" DATE, 
	"BUSMACHINE" VARCHAR2(50 BYTE), 
	"BUSCOUNTRY" VARCHAR2(30 BYTE), 
	"BUSBOUGHTDATE" DATE, 
	"BUSPRICE" NUMBER, 
	"COLOR" VARCHAR2(20 BYTE), 
	"PHOTO" BLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("PHOTO") STORE AS SECUREFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table TBLBUSEXPENSE
--------------------------------------------------------

  CREATE TABLE "BUS"."TBLBUSEXPENSE" 
   (	"BUSEXPID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"DESCRIPTION" VARCHAR2(100 BYTE), 
	"BUSID" NUMBER, 
	"DRIVERID" NUMBER, 
	"EXPENCE" NUMBER, 
	"EXPDATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBLDRIVER
--------------------------------------------------------

  CREATE TABLE "BUS"."TBLDRIVER" 
   (	"DRIVERID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"EMPID" NUMBER, 
	"DRIVERNAME" VARCHAR2(30 BYTE), 
	"GENDER" VARCHAR2(20 BYTE), 
	"DRIVERCARDID" NUMBER, 
	"DRIVERLICENSEID" NUMBER, 
	"DRIVERPHONENO" VARCHAR2(20 BYTE), 
	"DRIVERADDRESS" VARCHAR2(150 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBLEMPLOYEE
--------------------------------------------------------

  CREATE TABLE "BUS"."TBLEMPLOYEE" 
   (	"EMPID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"BRANCHID" NUMBER, 
	"EMPNAME" VARCHAR2(30 BYTE), 
	"GENDER" VARCHAR2(20 BYTE), 
	"EMPCARDID" VARCHAR2(20 BYTE), 
	"EMPPHONENO" VARCHAR2(20 BYTE), 
	"EMPADDRESS" VARCHAR2(150 BYTE), 
	"POSID" NUMBER, 
	"HIREDDATE" DATE, 
	"PHOTO" BLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("PHOTO") STORE AS SECUREFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table TBLGOODTRANPRICE
--------------------------------------------------------

  CREATE TABLE "BUS"."TBLGOODTRANPRICE" 
   (	"GOODTRANPRICEID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"GOODSIZE" VARCHAR2(30 BYTE), 
	"GOODMINPRICE" NUMBER, 
	"GOODMAXPRICE" NUMBER, 
	"SOURCEBRANCH" VARCHAR2(30 BYTE), 
	"DESTBRANCH" VARCHAR2(30 BYTE), 
	"PRICE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBLPOSITION
--------------------------------------------------------

  CREATE TABLE "BUS"."TBLPOSITION" 
   (	"POSID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"POSITION" VARCHAR2(50 BYTE), 
	"SALARY" NUMBER, 
	"NOTE" VARCHAR2(150 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBLTRANGOOD
--------------------------------------------------------

  CREATE TABLE "BUS"."TBLTRANGOOD" 
   (	"TRANGOODID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"TRANGOODDATE" DATE, 
	"EMPID" NUMBER, 
	"RECEIVERPHONENO" VARCHAR2(20 BYTE), 
	"SENDERPHONENO" VARCHAR2(20 BYTE), 
	"SOURCE" VARCHAR2(50 BYTE), 
	"DEST" VARCHAR2(50 BYTE), 
	"PRICE" NUMBER, 
	"SIZES" VARCHAR2(50 BYTE), 
	"DESCRIPTION" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBLTRANSCHEDULE
--------------------------------------------------------

  CREATE TABLE "BUS"."TBLTRANSCHEDULE" 
   (	"TRANSCHEDID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"SOURCEBRANCH" VARCHAR2(30 BYTE), 
	"DESTBRANCH" VARCHAR2(30 BYTE), 
	"TRANDAY" DATE, 
	"TRANTIME" VARCHAR2(20 BYTE), 
	"DURATION" VARCHAR2(20 BYTE), 
	"PRICE" NUMBER, 
	"BUSID" NUMBER, 
	"DRIVERID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBLTRANTICKET
--------------------------------------------------------

  CREATE TABLE "BUS"."TBLTRANTICKET" 
   (	"TRANTICKETID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"SOURCE" VARCHAR2(50 BYTE), 
	"DEST" VARCHAR2(50 BYTE), 
	"DEPARTUREDATETIME" DATE, 
	"SEATNO" VARCHAR2(20 BYTE), 
	"CUSFULLNAME" VARCHAR2(30 BYTE), 
	"EMPID" NUMBER, 
	"PRICE" NUMBER, 
	"BUSID" NUMBER, 
	"DRIVER" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBLUSER
--------------------------------------------------------

  CREATE TABLE "BUS"."TBLUSER" 
   (	"USERID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"USERNAME" VARCHAR2(50 BYTE), 
	"PASSWORD" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into BUS.TBLBOOKTRANTICKET
SET DEFINE OFF;
REM INSERTING into BUS.TBLBRANCH
SET DEFINE OFF;
Insert into BUS.TBLBRANCH (BRID,BRNAME,BRPHONENO1,BRPHONENO2,BRPHONENO3,BRFAX,BRADDRESS) values (1,'siem reap','0123456',null,null,'09276347','siem reap road 7');
Insert into BUS.TBLBRANCH (BRID,BRNAME,BRPHONENO1,BRPHONENO2,BRPHONENO3,BRFAX,BRADDRESS) values (2,'phnom phenh','09457632','073884652','09273454','0935475','phnom phenh watphnom');
Insert into BUS.TBLBRANCH (BRID,BRNAME,BRPHONENO1,BRPHONENO2,BRPHONENO3,BRFAX,BRADDRESS) values (21,'batdambong','09837243',null,null,'093583','stengsagkae');
REM INSERTING into BUS.TBLBUS
SET DEFINE OFF;
Insert into BUS.TBLBUS (BUSID,BUSPLATENO,BUSSEATNUM1STFLOOR,BUSSEATNUM2NDFLOOR,TOILET,BUSMANUFACTUREDDATE,BUSMACHINE,BUSCOUNTRY,BUSBOUGHTDATE,BUSPRICE,COLOR) values (1,'sr9999',20,0,1,to_date('01-DEC-22','DD-MON-RR'),'v10','japan',to_date('02-DEC-22','DD-MON-RR'),10000,'yellow');
Insert into BUS.TBLBUS (BUSID,BUSPLATENO,BUSSEATNUM1STFLOOR,BUSSEATNUM2NDFLOOR,TOILET,BUSMANUFACTUREDDATE,BUSMACHINE,BUSCOUNTRY,BUSBOUGHTDATE,BUSPRICE,COLOR) values (21,'pp888',23,0,2,to_date('05-DEC-22','DD-MON-RR'),'v12','japan',to_date('09-DEC-22','DD-MON-RR'),9000,'black');
REM INSERTING into BUS.TBLBUSEXPENSE
SET DEFINE OFF;
Insert into BUS.TBLBUSEXPENSE (BUSEXPID,DESCRIPTION,BUSID,DRIVERID,EXPENCE,EXPDATE) values (1,'tie',1,1,100,to_date('02-DEC-22','DD-MON-RR'));
Insert into BUS.TBLBUSEXPENSE (BUSEXPID,DESCRIPTION,BUSID,DRIVERID,EXPENCE,EXPDATE) values (3,'fix engine',1,1,899,to_date('07-DEC-22','DD-MON-RR'));
Insert into BUS.TBLBUSEXPENSE (BUSEXPID,DESCRIPTION,BUSID,DRIVERID,EXPENCE,EXPDATE) values (4,'tie',1,1,300,to_date('09-DEC-22','DD-MON-RR'));
REM INSERTING into BUS.TBLDRIVER
SET DEFINE OFF;
Insert into BUS.TBLDRIVER (DRIVERID,EMPID,DRIVERNAME,GENDER,DRIVERCARDID,DRIVERLICENSEID,DRIVERPHONENO,DRIVERADDRESS) values (1,1,'joe','male',1,1238374,'09732488','btb');
REM INSERTING into BUS.TBLEMPLOYEE
SET DEFINE OFF;
Insert into BUS.TBLEMPLOYEE (EMPID,BRANCHID,EMPNAME,GENDER,EMPCARDID,EMPPHONENO,EMPADDRESS,POSID,HIREDDATE) values (1,2,'joe','male','1','0984653','war phnom',1,to_date('06-DEC-22','DD-MON-RR'));
Insert into BUS.TBLEMPLOYEE (EMPID,BRANCHID,EMPNAME,GENDER,EMPCARDID,EMPPHONENO,EMPADDRESS,POSID,HIREDDATE) values (2,2,'sakada','male','33','09984974','wat phnom',1,to_date('21-DEC-22','DD-MON-RR'));
REM INSERTING into BUS.TBLGOODTRANPRICE
SET DEFINE OFF;
Insert into BUS.TBLGOODTRANPRICE (GOODTRANPRICEID,GOODSIZE,GOODMINPRICE,GOODMAXPRICE,SOURCEBRANCH,DESTBRANCH,PRICE) values (3,'medium',20,40,'siem reap','phnom phenh',39);
Insert into BUS.TBLGOODTRANPRICE (GOODTRANPRICEID,GOODSIZE,GOODMINPRICE,GOODMAXPRICE,SOURCEBRANCH,DESTBRANCH,PRICE) values (1,'small',10,20,'phnom phenh','siem reap',32);
Insert into BUS.TBLGOODTRANPRICE (GOODTRANPRICEID,GOODSIZE,GOODMINPRICE,GOODMAXPRICE,SOURCEBRANCH,DESTBRANCH,PRICE) values (4,'large',3,20,'phnom phenh','batdambong',20);
REM INSERTING into BUS.TBLPOSITION
SET DEFINE OFF;
Insert into BUS.TBLPOSITION (POSID,POSITION,SALARY,NOTE) values (1,'sale',200,'good');
Insert into BUS.TBLPOSITION (POSID,POSITION,SALARY,NOTE) values (2,'sdhf',123,null);
Insert into BUS.TBLPOSITION (POSID,POSITION,SALARY,NOTE) values (21,'driver',500,null);
REM INSERTING into BUS.TBLTRANGOOD
SET DEFINE OFF;
Insert into BUS.TBLTRANGOOD (TRANGOODID,TRANGOODDATE,EMPID,RECEIVERPHONENO,SENDERPHONENO,SOURCE,DEST,PRICE,SIZES,DESCRIPTION) values (1,to_date('08-DEC-22','DD-MON-RR'),1,'0983743324','0934384575','siem reap','phnom phenh',5,'small','car');
Insert into BUS.TBLTRANGOOD (TRANGOODID,TRANGOODDATE,EMPID,RECEIVERPHONENO,SENDERPHONENO,SOURCE,DEST,PRICE,SIZES,DESCRIPTION) values (2,to_date('06-DEC-22','DD-MON-RR'),1,'098373576','093756734','phnom phenh','siem reap',6,'small','moto');
Insert into BUS.TBLTRANGOOD (TRANGOODID,TRANGOODDATE,EMPID,RECEIVERPHONENO,SENDERPHONENO,SOURCE,DEST,PRICE,SIZES,DESCRIPTION) values (3,to_date('15-DEC-22','DD-MON-RR'),2,'09836573','0935673','phnom phenh','batdambong',20,'large','phone, skincare');
REM INSERTING into BUS.TBLTRANSCHEDULE
SET DEFINE OFF;
Insert into BUS.TBLTRANSCHEDULE (TRANSCHEDID,SOURCEBRANCH,DESTBRANCH,TRANDAY,TRANTIME,DURATION,PRICE,BUSID,DRIVERID) values (5,'phnom phenh','siem reap',to_date('08-DEC-22','DD-MON-RR'),'6:00am','4h',6,1,1);
Insert into BUS.TBLTRANSCHEDULE (TRANSCHEDID,SOURCEBRANCH,DESTBRANCH,TRANDAY,TRANTIME,DURATION,PRICE,BUSID,DRIVERID) values (2,'siem reap','phnom phenh',to_date('09-DEC-22','DD-MON-RR'),'3:00PM','3h',5,1,1);
Insert into BUS.TBLTRANSCHEDULE (TRANSCHEDID,SOURCEBRANCH,DESTBRANCH,TRANDAY,TRANTIME,DURATION,PRICE,BUSID,DRIVERID) values (6,'phnom phenh','batdambong',to_date('08-DEC-22','DD-MON-RR'),'6:00am','6h',15,21,1);
REM INSERTING into BUS.TBLTRANTICKET
SET DEFINE OFF;
Insert into BUS.TBLTRANTICKET (TRANTICKETID,SOURCE,DEST,DEPARTUREDATETIME,SEATNO,CUSFULLNAME,EMPID,PRICE,BUSID,DRIVER) values (6,'phnom phenh','siem reap',to_date('06-DEC-22','DD-MON-RR'),'f4','kk',1,4,1,'1');
Insert into BUS.TBLTRANTICKET (TRANTICKETID,SOURCE,DEST,DEPARTUREDATETIME,SEATNO,CUSFULLNAME,EMPID,PRICE,BUSID,DRIVER) values (1,'siem reap','phnom phenh',to_date('06-DEC-22','DD-MON-RR'),'a1','poki',1,13,1,'1');
Insert into BUS.TBLTRANTICKET (TRANTICKETID,SOURCE,DEST,DEPARTUREDATETIME,SEATNO,CUSFULLNAME,EMPID,PRICE,BUSID,DRIVER) values (7,'batdambong','phnom phenh',to_date('16-DEC-22','DD-MON-RR'),'a1','sopanha',2,15,21,'1');
REM INSERTING into BUS.TBLUSER
SET DEFINE OFF;
Insert into BUS.TBLUSER (USERID,USERNAME,PASSWORD) values (1,'bunsith','bunsith123');
--------------------------------------------------------
--  DDL for Index TBLUSER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BUS"."TBLUSER_PK" ON "BUS"."TBLUSER" ("USERID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBLGOODTRANPRICE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BUS"."TBLGOODTRANPRICE_PK" ON "BUS"."TBLGOODTRANPRICE" ("GOODTRANPRICEID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Procedure ADDBRANCH
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."ADDBRANCH" 
(
    vbrname tblbranch.brname%type,
    vbrphone1 tblbranch.brphoneno1%Type,
    vbrphone2 tblbranch.brphoneno2%Type,
    vbrphone3 tblbranch.brphoneno3%Type,
    vbrfax tblbranch.brfax%Type,
    vbraddress tblbranch.braddress%Type
)
 IS       
BEGIN
        insert into tblbranch(brname,brphoneno1,brphoneno2,brphoneno3,brfax,braddress) values (vbrname,vbrphone1,vbrphone2,vbrphone3,vbrfax,vbraddress);
END ;

/
--------------------------------------------------------
--  DDL for Procedure ADDBUS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."ADDBUS" 
(
    vbusplateno tblbus.busplateno%type,
    vbusseat1 tblbus.busseatnum1stfloor%TYPE,
    vbusseat2 tblbus.busseatnum2ndfloor%type,
    vtoilet tblbus.toilet%type,
    vmade tblbus.busmanufactureddate%type,
    vmachine tblbus.busmachine%type,
    vcountry tblbus.buscountry%type,
    vbought tblbus.busboughtdate%type,
    vprice tblbus.busprice%type,
    vcolor tblbus.color%type,
    vphoto tblbus.photo%type
)
 IS       
BEGIN
        insert into tblbus(busplateno,busseatnum1stfloor,busseatnum2ndfloor,toilet,busmanufactureddate,busmachine,buscountry,busboughtdate,busprice,color,photo) 
        values (vbusplateno,vbusseat1,vbusseat2,vtoilet,vmade,vmachine,vcountry,vbought,vprice,vcolor,vphoto);
END ;

/
--------------------------------------------------------
--  DDL for Procedure ADDBUSEXP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."ADDBUSEXP" 
(
    vbusid tblbusexpense.busid%type,
    vdriverid tblbusexpense.driverid%type,
    vexpence tblbusexpense.expence%type,
    vdesc tblbusexpense.description%type,
    vexpdate tblbusexpense.expdate%type
)
 IS       
BEGIN
        insert into tblbusexpense(busid,driverid,expence,description,expdate) 
        values (vbusid,vdriverid,vexpence,vdesc,vexpdate);
END ;

/
--------------------------------------------------------
--  DDL for Procedure ADDDRIVER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."ADDDRIVER" 
(
    vempid tbldriver.empid%type,
    vdrivername tbldriver.drivername%type,
    vgender tbldriver.gender%type,
    vdrivercardid tbldriver.drivercardid%type,
    vdriverlicenseid tbldriver.driverlicenseid%type,
    vdriverphoneno tbldriver.driverphoneno%type,
    vdriveraddress tbldriver.driveraddress%type
)
 IS       
BEGIN
        insert into tbldriver(empid,drivername,gender,drivercardid,driverlicenseid,driverphoneno,driveraddress) 
        values (vempid,vdrivername,vgender,vdrivercardid,vdriverlicenseid,vdriverphoneno,vdriveraddress);
END ;

/
--------------------------------------------------------
--  DDL for Procedure ADDEMPLOYEE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."ADDEMPLOYEE" 
(
    vbranch tblemployee.branchid%type,
    vempname tblemployee.empname%TYPE,
    vgender tblemployee.gender%type,
    vempcardid tblemployee.empcardid%type,
    vempphoneno tblemployee.empphoneno%type,
    vempaddress tblemployee.empaddress%type,
    vpos tblemployee.posid%type,
    vhire tblemployee.hireddate%type,
    vimg tblemployee.photo%type
)
 IS       
BEGIN
        insert into tblemployee(empname,gender,empcardid,empphoneno,empaddress,branchid,posid,hireddate,photo) 
        values (vempname,vgender,vempcardid,vempphoneno,vempaddress,vbranch,vpos,vhire,vimg);
END ;

/
--------------------------------------------------------
--  DDL for Procedure ADDPOSITION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."ADDPOSITION" 
(
    vposition tblposition.position%type,
    vsalary tblposition.salary%Type,
    vnote tblposition.note%Type
    
    
)
 IS       
BEGIN
        insert into tblposition(position,salary,note) values (vposition,vsalary,vnote);
END ;

/
--------------------------------------------------------
--  DDL for Procedure ADDPRICE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."ADDPRICE" 
(
    vsize tblgoodtranprice.goodsize%type,
    vminprice tblgoodtranprice.goodminprice%type,
    vmaxprice tblgoodtranprice.goodmaxprice%type,
    vsource tblgoodtranprice.sourcebranch%type,
    vdest tblgoodtranprice.destbranch%type,
    vprice tblgoodtranprice.price%type
)
 IS       
BEGIN
        insert into tblgoodtranprice(goodsize,goodminprice,goodmaxprice,sourcebranch,destbranch,price) 
        values (vsize,vminprice,vmaxprice,vsource,vdest,vprice);
END ;

/
--------------------------------------------------------
--  DDL for Procedure ADDTRAN
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."ADDTRAN" 
(
    vempid tbltrangood.empid%type,
    vreceive tbltrangood.receiverphoneno%type,
    vsend tbltrangood.senderphoneno%type,
    vdate tbltrangood.trangooddate%type,
    vsource tbltrangood.source%type,
    vdest tbltrangood.dest%type,
    vprice tbltrangood.price%type,
    vsizes tbltrangood.sizes%type,
    vdesc tbltrangood.description%type
)
 IS       
BEGIN
        insert into tbltrangood(empid,receiverphoneno,senderphoneno,trangooddate,source,dest,price,sizes,description) 
        values (vempid,vreceive,vsend,vdate,vsource,vdest,vprice,vsizes,vdesc);
END ;

/
--------------------------------------------------------
--  DDL for Procedure ADDTRANSCHE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."ADDTRANSCHE" 
(
    vsource tbltranschedule.sourcebranch%type,
    vdest tbltranschedule.destbranch%type,
    vday tbltranschedule.tranday%type,
    vtime tbltranschedule.trantime%type,
    vduration tbltranschedule.duration%type,
    vprice tbltranschedule.price%type,
    vbus tbltranschedule.busid%type,
    vdriver tbltranschedule.driverid%type
)
 IS       
BEGIN
        insert into tbltranschedule(sourcebranch,destbranch,tranday,trantime,duration,price,busid,driverid) 
        values (vsource,vdest,vday,vtime,vduration,vprice,vbus,vdriver);
END ;

/
--------------------------------------------------------
--  DDL for Procedure ADDTRANTICKET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."ADDTRANTICKET" 
(
    vsource tbltranticket.source%type,
    vdest tbltranticket.dest%type,
    vdatetime tbltranticket.departuredatetime%type,
    vseatno tbltranticket.seatno%type,
    vcus tbltranticket.cusfullname%type,
    vempid tbltranticket.empid%type,
    vprice tbltranticket.price%type,
    vbus tbltranticket.busid%type,
    vdriver tbltranticket.driver%type
)
 IS       
BEGIN
        insert into tbltranticket(source,dest,departuredatetime,seatno,cusfullname,empid,price,busid,driver) 
        values (vsource,vdest,vdatetime,vseatno,vcus,vempid,vprice,vbus,vdriver);
END ;

/
--------------------------------------------------------
--  DDL for Procedure ADDUSER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."ADDUSER" 
(
    vusername tbluser.username%type,
    vpassword tbluser.password%type
)
 IS       
BEGIN
        insert into tbluser(username,password) 
        values (vusername,vpassword);
END ;

/
--------------------------------------------------------
--  DDL for Procedure BRANCHREPORT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."BRANCHREPORT" 



IS
 c1 sys_refcursor;
 BEGIN
    open c1 for
    select * from tblbranch ;
    dbms_sql.return_result(c1);
 END;

/
--------------------------------------------------------
--  DDL for Procedure BUSEXPENREPORT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."BUSEXPENREPORT" 



IS
 c1 sys_refcursor;
 BEGIN
    open c1 for
    select * from tblbusexpense ;
    dbms_sql.return_result(c1);
 END;

/
--------------------------------------------------------
--  DDL for Procedure BUSREPORT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."BUSREPORT" 



IS
 c1 sys_refcursor;
 BEGIN
    open c1 for
    select * from tblbus ;
    dbms_sql.return_result(c1);
 END;

/
--------------------------------------------------------
--  DDL for Procedure DELETEBRANCH
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."DELETEBRANCH" 
(
    vbrid tblbranch.brid%type
)
 IS       
BEGIN
        delete from tblbranch where brid = vbrid;
END ;

/
--------------------------------------------------------
--  DDL for Procedure DELETEBUS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."DELETEBUS" 
(
    vbusid tblbus.busid%type
)
 IS       
BEGIN
        delete from tblbus where busid = vbusid;
END ;

/
--------------------------------------------------------
--  DDL for Procedure DELETEBUSEXP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."DELETEBUSEXP" 
(
    vbusexpid tblbusexpense.busexpid%type
)
 IS       
BEGIN
        delete from tblbusexpense where busexpid = vbusexpid;
END ;

/
--------------------------------------------------------
--  DDL for Procedure DELETEDRIVER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."DELETEDRIVER" 
(
    vdriverid tbldriver.driverid%type
)
 IS       
BEGIN
        delete from tbldriver where driverid = vdriverid;
END ;

/
--------------------------------------------------------
--  DDL for Procedure DELETEEMPLOYEE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."DELETEEMPLOYEE" 
(
    vempid tblemployee.empid%type
)
 IS       
BEGIN
        delete from tblemployee where empid = vempid;
END ;

/
--------------------------------------------------------
--  DDL for Procedure DELETEPOSITION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."DELETEPOSITION" 
(
    vposid tblposition.posid%type
    
    
)
 IS       
BEGIN
        delete from tblposition where posid = vposid;
END ;

/
--------------------------------------------------------
--  DDL for Procedure DELETEPRICE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."DELETEPRICE" 
(
    vtranpriceid tblgoodtranprice.goodtranpriceid%type
)
 IS       
BEGIN
        delete from tblgoodtranprice where goodtranpriceid = vtranpriceid;
END ;

/
--------------------------------------------------------
--  DDL for Procedure DELETETRAN
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."DELETETRAN" 
(
    vtranid tbltrangood.trangoodid%type
)
 IS       
BEGIN
        delete from tbltrangood where trangoodid = vtranid;
END ;

/
--------------------------------------------------------
--  DDL for Procedure DELETETRANSCH
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."DELETETRANSCH" 
(
    vtranschid tbltranschedule.transchedid%type
)
 IS       
BEGIN
        delete from tbltranschedule where transchedid = vtranschid;
END ;

/
--------------------------------------------------------
--  DDL for Procedure DELETETRANTICKET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."DELETETRANTICKET" 
(
    vtranticketid tbltranticket.tranticketid%type
)
 IS       
BEGIN
        delete from tbltranticket where tranticketid = vtranticketid;
END ;

/
--------------------------------------------------------
--  DDL for Procedure DELETEUSER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."DELETEUSER" 
(
    vuserid tbluser.userid%type
)
 IS       
BEGIN
        delete from tbluser where userid = vuserid;
END ;

/
--------------------------------------------------------
--  DDL for Procedure DRIVERREPORT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."DRIVERREPORT" 



IS
 c1 sys_refcursor;
 BEGIN
    open c1 for
    select * from tbldriver ;
    dbms_sql.return_result(c1);
 END;

/
--------------------------------------------------------
--  DDL for Procedure EMPLOYEEREPORT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."EMPLOYEEREPORT" 



IS
 c1 sys_refcursor;
 BEGIN
    open c1 for
    select * from tblemployee ;
    dbms_sql.return_result(c1);
 END;

/
--------------------------------------------------------
--  DDL for Procedure PRICEREPORT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."PRICEREPORT" 



IS
 c1 sys_refcursor;
 BEGIN
    open c1 for
    select * from tblgoodtranprice ;
    dbms_sql.return_result(c1);
 END;

/
--------------------------------------------------------
--  DDL for Procedure SEARCHBRANCH
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SEARCHBRANCH" (
    vbrname tblbranch.brname%TYPE)
IS
    --variable declaration
    c1 SYS_REFCURSOR;
BEGIN
    OPEN c1 FOR
    --SELECT * FROM tblcategories WHERE UPPER(categoryname) LIKE '%' || UPPER(vname) || '%';
    SELECT * FROM tblbranch WHERE UPPER(brname) LIKE '%' || UPPER(vbrname) || '%';
    dbms_sql.return_result(c1);
END;

/
--------------------------------------------------------
--  DDL for Procedure SEARCHBUS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SEARCHBUS" (
    vbusplateno tblbus.busplateno%TYPE)
IS
    --variable declaration
    c1 SYS_REFCURSOR;
BEGIN
    OPEN c1 FOR
    --SELECT * FROM tblcategories WHERE UPPER(categoryname) LIKE '%' || UPPER(vname) || '%';
    SELECT * FROM tblbus WHERE UPPER(busplateno) LIKE '%' || UPPER(vbusplateno) || '%';
    dbms_sql.return_result(c1);
END;

/
--------------------------------------------------------
--  DDL for Procedure SEARCHDRIVER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SEARCHDRIVER" (
    vdrivername tbldriver.drivername%TYPE)
IS
    --variable declaration
    c1 SYS_REFCURSOR;
BEGIN
    OPEN c1 FOR
    --SELECT * FROM tblcategories WHERE UPPER(categoryname) LIKE '%' || UPPER(vname) || '%';
    SELECT * FROM tbldriver WHERE UPPER(drivername) LIKE '%' || UPPER(vdrivername) || '%';
    dbms_sql.return_result(c1);
END;

/
--------------------------------------------------------
--  DDL for Procedure SEARCHEMPLOYEE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SEARCHEMPLOYEE" (
    vempname tblemployee.empname%TYPE)
IS
    --variable declaration
    c1 SYS_REFCURSOR;
BEGIN
    OPEN c1 FOR
    --SELECT * FROM tblcategories WHERE UPPER(categoryname) LIKE '%' || UPPER(vname) || '%';
    SELECT * FROM tblemployee WHERE UPPER(empname) LIKE '%' || UPPER(vempname) || '%';
    dbms_sql.return_result(c1);
END;

/
--------------------------------------------------------
--  DDL for Procedure SEARCHPOSITION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SEARCHPOSITION" (
    vposition tblposition.position%TYPE)
IS
    --variable declaration
    c1 SYS_REFCURSOR;
BEGIN
    OPEN c1 FOR
    --SELECT * FROM tblcategories WHERE UPPER(categoryname) LIKE '%' || UPPER(vname) || '%';
    SELECT * FROM tblposition WHERE UPPER(position) LIKE '%' || UPPER(vposition) || '%';
    dbms_sql.return_result(c1);
END;

/
--------------------------------------------------------
--  DDL for Procedure SEARCHPRICE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SEARCHPRICE" (
    vsize tblgoodtranprice.goodsize%TYPE)
IS
    --variable declaration
    c1 SYS_REFCURSOR;
BEGIN
    OPEN c1 FOR
    --SELECT * FROM tblcategories WHERE UPPER(categoryname) LIKE '%' || UPPER(vname) || '%';
    SELECT * FROM tblgoodtranprice WHERE UPPER(goodsize) LIKE '%' || UPPER(vsize) || '%';
    dbms_sql.return_result(c1);
END;

/
--------------------------------------------------------
--  DDL for Procedure SEARCHTICKET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SEARCHTICKET" (
    vcus tbltranticket.cusfullname%TYPE)
IS
    --variable declaration
    c1 SYS_REFCURSOR;
BEGIN
    OPEN c1 FOR
    --SELECT * FROM tblcategories WHERE UPPER(categoryname) LIKE '%' || UPPER(vname) || '%';
    SELECT * FROM tbltranticket WHERE UPPER(cusfullname) LIKE '%' || UPPER(vcus) || '%';
    dbms_sql.return_result(c1);
END;

/
--------------------------------------------------------
--  DDL for Procedure SEARCHTRANSCH
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SEARCHTRANSCH" (
    vsource tbltranschedule.sourcebranch%TYPE)
IS
    --variable declaration
    c1 SYS_REFCURSOR;
BEGIN
    OPEN c1 FOR
    --SELECT * FROM tblcategories WHERE UPPER(categoryname) LIKE '%' || UPPER(vname) || '%';
    SELECT * FROM tbltranschedule WHERE UPPER(sourcebranch) LIKE '%' || UPPER(vsource) || '%';
    dbms_sql.return_result(c1);
END;

/
--------------------------------------------------------
--  DDL for Procedure SHOWBRANCH
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SHOWBRANCH" 
is
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR
    select * FROM tblbranch;
    dbms_sql.return_result(c1);
end;

/
--------------------------------------------------------
--  DDL for Procedure SHOWBUS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SHOWBUS" 
is
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR
    select * FROM tblbus;
    dbms_sql.return_result(c1);
end;

/
--------------------------------------------------------
--  DDL for Procedure SHOWBUSEXP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SHOWBUSEXP" 
is
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR
     select busexpid,busid,driverid,expence,description,expdate FROM tblbusexpense;
    dbms_sql.return_result(c1);
end;

/
--------------------------------------------------------
--  DDL for Procedure SHOWDRIVER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SHOWDRIVER" 
is
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR
    select * FROM tbldriver;
    dbms_sql.return_result(c1);
end;

/
--------------------------------------------------------
--  DDL for Procedure SHOWEMPLOYEE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SHOWEMPLOYEE" 
is
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR
    select empid,branchid, empname,gender,empcardid,empphoneno,empaddress,posid,hireddate,photo FROM tblemployee;
    dbms_sql.return_result(c1);
end;

/
--------------------------------------------------------
--  DDL for Procedure SHOWPOSITION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SHOWPOSITION" 
is
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR
    select * FROM tblposition;
    dbms_sql.return_result(c1);
end;

/
--------------------------------------------------------
--  DDL for Procedure SHOWTRAN
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SHOWTRAN" 
is
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR
    select * FROM tbltrangood;
    dbms_sql.return_result(c1);
end;

/
--------------------------------------------------------
--  DDL for Procedure SHOWTRANPRICE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SHOWTRANPRICE" 
is
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR
    select * FROM tblgoodtranprice;
    dbms_sql.return_result(c1);
end;

/
--------------------------------------------------------
--  DDL for Procedure SHOWTRANSCH
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SHOWTRANSCH" 
is
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR
    select * FROM tbltranschedule;
    dbms_sql.return_result(c1);
end;

/
--------------------------------------------------------
--  DDL for Procedure SHOWTRANTICKET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SHOWTRANTICKET" 
is
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR
    select * FROM tbltranticket;
    dbms_sql.return_result(c1);
end;

/
--------------------------------------------------------
--  DDL for Procedure SHOWUSER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."SHOWUSER" 
is
    c1 SYS_REFCURSOR;
BEGIN
    open c1 FOR
    select * FROM tbluser;
    dbms_sql.return_result(c1);
end;

/
--------------------------------------------------------
--  DDL for Procedure TEST
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."TEST" 
(
id tbltranticket.tranticketid%TYPE
)
IS
 c1 sys_refcursor;
 BEGIN
    open c1 for
    select * from tbltranticket where tranticketid=id ;
    dbms_sql.return_result(c1);
 END;

/
--------------------------------------------------------
--  DDL for Procedure TRANSCHEREPORT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."TRANSCHEREPORT" 



IS
 c1 sys_refcursor;
 BEGIN
    open c1 for
    select * from tbltranschedule ;
    dbms_sql.return_result(c1);
 END;

/
--------------------------------------------------------
--  DDL for Procedure TRANSPORT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."TRANSPORT" 
(
id tbltrangood.trangoodid%TYPE
)
IS
 c1 sys_refcursor;
 BEGIN
    open c1 for
    select * from tbltrangood where trangoodid = id ;
    dbms_sql.return_result(c1);
 END;

/
--------------------------------------------------------
--  DDL for Procedure TRANSPORTREPORT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."TRANSPORTREPORT" 



IS
 c1 sys_refcursor;
 BEGIN
    open c1 for
    select * from tbltrangood ;
    dbms_sql.return_result(c1);
 END;

/
--------------------------------------------------------
--  DDL for Procedure TRANTICKETREPORT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."TRANTICKETREPORT" 



IS
 c1 sys_refcursor;
 BEGIN
    open c1 for
    select * from tbltranticket ;
    dbms_sql.return_result(c1);
 END;

/
--------------------------------------------------------
--  DDL for Procedure UPDATEBRANCH
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."UPDATEBRANCH" 
(
    vbrid tblbranch.brid%type,
    vbrname tblbranch.brname%type,
    vbrphone1 tblbranch.brphoneno1%Type,
    vbrphone2 tblbranch.brphoneno2%Type,
    vbrphone3 tblbranch.brphoneno3%Type,
    vbrfax tblbranch.brfax%Type,
    vbraddress tblbranch.braddress%Type
)
 IS       
BEGIN
        UPDATE tblbranch set brname = vbrname, brphoneno1 = vbrphone1,brphoneno2=vbrphone2,brphoneno3=vbrphone3,brfax=vbrfax,braddress=vbraddress where brid = vbrid;
END ;

/
--------------------------------------------------------
--  DDL for Procedure UPDATEBUS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."UPDATEBUS" 
(
    vbusid tblbus.busid%type,
    vbusplateno tblbus.busplateno%type,
    vbusseat1 tblbus.busseatnum1stfloor%TYPE,
    vbusseat2 tblbus.busseatnum2ndfloor%type,
    vtoilet tblbus.toilet%type,
    vmade tblbus.busmanufactureddate%type,
    vmachine tblbus.busmachine%type,
    vcountry tblbus.buscountry%type,
    vbought tblbus.busboughtdate%type,
    vprice tblbus.busprice%type,
    vcolor tblbus.color%type,
    vphoto tblbus.photo%type
)
 IS       
BEGIN
        UPDATE tblbus set busplateno = vbusplateno,busseatnum1stfloor = vbusseat1,busseatnum2ndfloor=vbusseat2,toilet=vtoilet,busmanufactureddate=vmade,busmachine=vmachine,buscountry=vcountry,
        busboughtdate=vbought,busprice=vprice,color=vcolor,photo=vphoto
        where busid = vbusid ;
END ;

/
--------------------------------------------------------
--  DDL for Procedure UPDATEBUSEXP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."UPDATEBUSEXP" 
(
    vbusexpid tblbusexpense.busexpid%type,
    vbusid tblbusexpense.busid%type,
    vdriverid tblbusexpense.driverid%type,
    vexpence tblbusexpense.expence%type,
    vdesc tblbusexpense.description%type,
    vexpdate tblbusexpense.expdate%type
)
 IS       
BEGIN
        UPDATE tblbusexpense set busid = vbusid,driverid = vdriverid,expence=vexpence,description=vdesc,expdate=vexpdate where busexpid = vbusexpid ;
END ;

/
--------------------------------------------------------
--  DDL for Procedure UPDATEDRIVER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."UPDATEDRIVER" 
(
vdriverid tbldriver.driverid%type,
    vempid tbldriver.empid%type,
    vdrivername tbldriver.drivername%type,
    vgender tbldriver.gender%type,
    vdrivercardid tbldriver.drivercardid%type,
    vdriverlicenseid tbldriver.driverlicenseid%type,
    vdriverphoneno tbldriver.driverphoneno%type,
    vdriveraddress tbldriver.driveraddress%type
)
 IS       
BEGIN
         UPDATE tbldriver set empid = vempid,drivername = vdrivername,gender=vgender,drivercardid=vdrivercardid,driverlicenseid=vdriverlicenseid,driverphoneno=vdriverphoneno,driveraddress=vdriveraddress where driverid = vdriverid ;
END ;

/
--------------------------------------------------------
--  DDL for Procedure UPDATEEMPLOYEE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."UPDATEEMPLOYEE" 
(
    vempid tblemployee.empid%type,
    vbranch tblemployee.branchid%type,
    vempname tblemployee.empname%TYPE,
    vgender tblemployee.gender%type,
    vempcardid tblemployee.empcardid%type,
    vempphoneno tblemployee.empphoneno%type,
    vempaddress tblemployee.empaddress%type,
    vpos tblemployee.posid%type,
    vhire tblemployee.hireddate%type,
    vimg tblemployee.photo%type
)
 IS       
BEGIN
         UPDATE tblemployee set branchid = vbranch,  empname = vempname,gender=vgender,empcardid=vempcardid,empphoneno=vempphoneno,empaddress=vempaddress,posid=vpos,hireddate=vhire,photo=vimg where empid = vempid ;
END ;

/
--------------------------------------------------------
--  DDL for Procedure UPDATEPOSITION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."UPDATEPOSITION" 
(
    vposid tblposition.posid%type,
    vposition tblposition.position%type,
    vsalary tblposition.salary%Type,
    vnote tblposition.note%Type
    
    
)
 IS       
BEGIN
        UPDATE tblposition set position = vposition,  salary = vsalary,note=vnote where posid = vposid ;
END ;

/
--------------------------------------------------------
--  DDL for Procedure UPDATEPRICE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."UPDATEPRICE" 
(
    vtranpriceid tblgoodtranprice.goodtranpriceid%type,
    vsize tblgoodtranprice.goodsize%type,
    vminprice tblgoodtranprice.goodminprice%type,
    vmaxprice tblgoodtranprice.goodmaxprice%type,
    vsource tblgoodtranprice.sourcebranch%type,
    vdest tblgoodtranprice.destbranch%type,
    vprice tblgoodtranprice.price%type
)
 IS       
BEGIN
        UPDATE tblgoodtranprice set goodsize = vsize,goodminprice=vminprice,goodmaxprice=vmaxprice,sourcebranch=vsource,destbranch=vdest,price=vprice where goodtranpriceid = vtranpriceid;
END ;

/
--------------------------------------------------------
--  DDL for Procedure UPDATETRAN
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."UPDATETRAN" 
(
    vtranid tbltrangood.trangoodid%type,
    vempid tbltrangood.empid%type,
    vreceive tbltrangood.receiverphoneno%type,
    vsend tbltrangood.senderphoneno%type,
    vdate tbltrangood.trangooddate%type,
    vsource tbltrangood.source%type,
    vdest tbltrangood.dest%type,
    vprice tbltrangood.price%type,
    vsizes tbltrangood.sizes%type,
    vdesc tbltrangood.description%type
)
 IS       
BEGIN
        UPDATE tbltrangood set empid = vempid,receiverphoneno=vreceive,senderphoneno=vsend,trangooddate=vdate,
        source=vsource,dest=vdest,price=vprice,sizes=vsizes,description=vdesc
        where trangoodid = vtranid ;
END ;

/
--------------------------------------------------------
--  DDL for Procedure UPDATETRANSCHE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."UPDATETRANSCHE" 
(
    vtranschid tbltranschedule.transchedid%type,
    vsource tbltranschedule.sourcebranch%type,
    vdest tbltranschedule.destbranch%type,
    vday tbltranschedule.tranday%type,
    vtime tbltranschedule.trantime%type,
    vduration tbltranschedule.duration%type,
    vprice tbltranschedule.price%type,
    vbus tbltranschedule.busid%type,
    vdriver tbltranschedule.driverid%type
)
 IS       
BEGIN
        UPDATE tbltranschedule set sourcebranch = vsource,destbranch=vdest,tranday=vday,trantime=vtime,duration=vduration,price=vprice,busid=vbus,driverid=vdriver
        where transchedid = vtranschid ;
END ;

/
--------------------------------------------------------
--  DDL for Procedure UPDATETRANTICKET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."UPDATETRANTICKET" 
(
    vtranticketid tbltranticket.tranticketid%type,
    vsource tbltranticket.source%type,
    vdest tbltranticket.dest%type,
    vdatetime tbltranticket.departuredatetime%type,
    vseatno tbltranticket.seatno%type,
    vcus tbltranticket.cusfullname%type,
    vempid tbltranticket.empid%type,
    vprice tbltranticket.price%type,
    vbus tbltranticket.busid%type,
    vdriver tbltranticket.driver%type
)
 IS       
BEGIN
        UPDATE tbltranticket set source = vsource,dest=vdest,departuredatetime=vdatetime,seatno=vseatno,cusfullname=vcus,empid=vempid ,price=vprice,busid=vbus,driver=vdriver
        where tranticketid = vtranticketid;
END ;

/
--------------------------------------------------------
--  DDL for Procedure UPDATEUSER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "BUS"."UPDATEUSER" 
(
    vuserid tbluser.userid%type,
    vusername tbluser.username%type,
    vpassword tbluser.password%Type
    
    
)
 IS       
BEGIN
        UPDATE tbluser set username = vusername,  password = vpassword where userid = vuserid ;
END ;

/
--------------------------------------------------------
--  Constraints for Table TBLTRANSCHEDULE
--------------------------------------------------------

  ALTER TABLE "BUS"."TBLTRANSCHEDULE" MODIFY ("TRANSCHEDID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANSCHEDULE" MODIFY ("SOURCEBRANCH" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANSCHEDULE" MODIFY ("DESTBRANCH" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANSCHEDULE" MODIFY ("TRANDAY" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANSCHEDULE" MODIFY ("TRANTIME" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANSCHEDULE" MODIFY ("PRICE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANSCHEDULE" MODIFY ("BUSID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANSCHEDULE" MODIFY ("DRIVERID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANSCHEDULE" ADD PRIMARY KEY ("TRANSCHEDID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBLUSER
--------------------------------------------------------

  ALTER TABLE "BUS"."TBLUSER" MODIFY ("USERID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLUSER" ADD CONSTRAINT "TBLUSER_PK" PRIMARY KEY ("USERID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "BUS"."TBLUSER" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLUSER" MODIFY ("PASSWORD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBLTRANTICKET
--------------------------------------------------------

  ALTER TABLE "BUS"."TBLTRANTICKET" MODIFY ("TRANTICKETID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANTICKET" MODIFY ("SOURCE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANTICKET" MODIFY ("DEST" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANTICKET" MODIFY ("DEPARTUREDATETIME" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANTICKET" MODIFY ("SEATNO" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANTICKET" MODIFY ("EMPID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANTICKET" MODIFY ("PRICE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANTICKET" MODIFY ("BUSID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANTICKET" ADD PRIMARY KEY ("TRANTICKETID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBLBUS
--------------------------------------------------------

  ALTER TABLE "BUS"."TBLBUS" MODIFY ("BUSID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUS" MODIFY ("BUSPLATENO" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUS" MODIFY ("BUSSEATNUM1STFLOOR" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUS" MODIFY ("TOILET" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUS" MODIFY ("BUSMANUFACTUREDDATE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUS" MODIFY ("BUSMACHINE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUS" MODIFY ("BUSCOUNTRY" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUS" MODIFY ("BUSBOUGHTDATE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUS" MODIFY ("BUSPRICE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUS" ADD PRIMARY KEY ("BUSID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBLBRANCH
--------------------------------------------------------

  ALTER TABLE "BUS"."TBLBRANCH" MODIFY ("BRID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBRANCH" MODIFY ("BRNAME" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBRANCH" MODIFY ("BRPHONENO1" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBRANCH" MODIFY ("BRFAX" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBRANCH" ADD PRIMARY KEY ("BRID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBLDRIVER
--------------------------------------------------------

  ALTER TABLE "BUS"."TBLDRIVER" MODIFY ("DRIVERID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLDRIVER" MODIFY ("EMPID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLDRIVER" MODIFY ("DRIVERNAME" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLDRIVER" MODIFY ("GENDER" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLDRIVER" MODIFY ("DRIVERCARDID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLDRIVER" MODIFY ("DRIVERLICENSEID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLDRIVER" MODIFY ("DRIVERPHONENO" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLDRIVER" MODIFY ("DRIVERADDRESS" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLDRIVER" ADD PRIMARY KEY ("DRIVERID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBLEMPLOYEE
--------------------------------------------------------

  ALTER TABLE "BUS"."TBLEMPLOYEE" MODIFY ("EMPID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLEMPLOYEE" ADD PRIMARY KEY ("EMPID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBLGOODTRANPRICE
--------------------------------------------------------

  ALTER TABLE "BUS"."TBLGOODTRANPRICE" ADD CONSTRAINT "TBLGOODTRANPRICE_PK" PRIMARY KEY ("GOODTRANPRICEID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "BUS"."TBLGOODTRANPRICE" MODIFY ("GOODTRANPRICEID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLGOODTRANPRICE" MODIFY ("GOODSIZE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLGOODTRANPRICE" MODIFY ("GOODMINPRICE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLGOODTRANPRICE" MODIFY ("GOODMAXPRICE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLGOODTRANPRICE" MODIFY ("SOURCEBRANCH" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLGOODTRANPRICE" MODIFY ("DESTBRANCH" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLGOODTRANPRICE" MODIFY ("PRICE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBLBOOKTRANTICKET
--------------------------------------------------------

  ALTER TABLE "BUS"."TBLBOOKTRANTICKET" MODIFY ("BOOKTRANTICKETID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBOOKTRANTICKET" MODIFY ("SOURCE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBOOKTRANTICKET" MODIFY ("DEST" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBOOKTRANTICKET" MODIFY ("TIME" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBOOKTRANTICKET" MODIFY ("DEPARTUREDATETIME" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBOOKTRANTICKET" MODIFY ("SEATNO" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBOOKTRANTICKET" MODIFY ("EMPID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBOOKTRANTICKET" MODIFY ("PRICE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBOOKTRANTICKET" MODIFY ("BUSID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBOOKTRANTICKET" ADD PRIMARY KEY ("BOOKTRANTICKETID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBLPOSITION
--------------------------------------------------------

  ALTER TABLE "BUS"."TBLPOSITION" MODIFY ("POSID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLPOSITION" MODIFY ("POSITION" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLPOSITION" MODIFY ("SALARY" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLPOSITION" ADD PRIMARY KEY ("POSID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBLBUSEXPENSE
--------------------------------------------------------

  ALTER TABLE "BUS"."TBLBUSEXPENSE" MODIFY ("BUSEXPID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUSEXPENSE" MODIFY ("DESCRIPTION" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUSEXPENSE" MODIFY ("BUSID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUSEXPENSE" MODIFY ("DRIVERID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUSEXPENSE" MODIFY ("EXPENCE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUSEXPENSE" MODIFY ("EXPDATE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLBUSEXPENSE" ADD PRIMARY KEY ("BUSEXPID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TBLTRANGOOD
--------------------------------------------------------

  ALTER TABLE "BUS"."TBLTRANGOOD" MODIFY ("TRANGOODID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANGOOD" MODIFY ("TRANGOODDATE" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANGOOD" MODIFY ("EMPID" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANGOOD" MODIFY ("RECEIVERPHONENO" NOT NULL ENABLE);
  ALTER TABLE "BUS"."TBLTRANGOOD" MODIFY ("SENDERPHONENO" NOT NULL ENABLE);
